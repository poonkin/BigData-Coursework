#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class CitiBikeData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  UNIQUE_ID = 1
  TRIPDURATION = 2
  STARTTIME = 3
  STOPTIME = 4
  STARTSTATION = 5
  STARTSTATIONNAME = 6
  STARTSTATIONLAT = 7
  STARTSTATIONLONG = 8
  ENDSTATION = 9
  ENDSTATIONNAME = 10
  ENDSTATIONLAT = 11
  ENDSTATIONLONG = 12
  BIKEID = 13
  USERTYPE = 14
  BIRTHYEAR = 15
  GENDER = 16

  FIELDS = {
    UNIQUE_ID => {:type => ::Thrift::Types::I32, :name => 'unique_id'},
    TRIPDURATION => {:type => ::Thrift::Types::I32, :name => 'tripduration'},
    STARTTIME => {:type => ::Thrift::Types::STRING, :name => 'starttime'},
    STOPTIME => {:type => ::Thrift::Types::STRING, :name => 'stoptime'},
    STARTSTATION => {:type => ::Thrift::Types::I32, :name => 'startstation'},
    STARTSTATIONNAME => {:type => ::Thrift::Types::STRING, :name => 'startstationname'},
    STARTSTATIONLAT => {:type => ::Thrift::Types::DOUBLE, :name => 'startstationlat'},
    STARTSTATIONLONG => {:type => ::Thrift::Types::DOUBLE, :name => 'startstationlong'},
    ENDSTATION => {:type => ::Thrift::Types::I32, :name => 'endstation'},
    ENDSTATIONNAME => {:type => ::Thrift::Types::STRING, :name => 'endstationname'},
    ENDSTATIONLAT => {:type => ::Thrift::Types::DOUBLE, :name => 'endstationlat'},
    ENDSTATIONLONG => {:type => ::Thrift::Types::DOUBLE, :name => 'endstationlong'},
    BIKEID => {:type => ::Thrift::Types::I32, :name => 'bikeid'},
    USERTYPE => {:type => ::Thrift::Types::STRING, :name => 'usertype'},
    BIRTHYEAR => {:type => ::Thrift::Types::I32, :name => 'birthyear'},
    GENDER => {:type => ::Thrift::Types::I32, :name => 'gender'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field unique_id is unset!') unless @unique_id
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field tripduration is unset!') unless @tripduration
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field starttime is unset!') unless @starttime
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field stoptime is unset!') unless @stoptime
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field startstation is unset!') unless @startstation
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field startstationname is unset!') unless @startstationname
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field startstationlat is unset!') unless @startstationlat
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field startstationlong is unset!') unless @startstationlong
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field endstation is unset!') unless @endstation
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field endstationname is unset!') unless @endstationname
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field endstationlat is unset!') unless @endstationlat
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field endstationlong is unset!') unless @endstationlong
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field bikeid is unset!') unless @bikeid
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field usertype is unset!') unless @usertype
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field birthyear is unset!') unless @birthyear
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gender is unset!') unless @gender
  end

  ::Thrift::Struct.generate_accessors self
end

